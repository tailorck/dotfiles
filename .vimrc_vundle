" Guide to Python and Vim: 
" https://realpython.com/blog/python/vim-and-python-a-match-made-in-heaven/

" Be sure to source (:so ~/.vimrc) before running :PluginInstall
" let mapleader = "\\"
let mapleader = ","

set nocompatible              " required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" ================================================================================ 
" Vundle
" ================================================================================ 
" Search plugins with command :PluginSearch!
" List plugins with command :PluginList
" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'


" ================================================================================ 
" SimpylFold
" ================================================================================ 
Plugin 'tmhedberg/SimpylFold'

" SimpylFold enable viewing docstrings for folded code
" let g:SimpylFold_docstring_preview=1


" ================================================================================ 
" IndentPython
" ================================================================================ 
Plugin 'vim-scripts/indentpython.vim'


" ================================================================================ 
" YouCompleteMe
" ================================================================================ 
Plugin 'Valloric/YouCompleteMe'

let g:ycm_server_python_interpreter='python2'
let g:ycm_filetype_specific_completion_to_disable={'javascript': 1}
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g	:YcmCompleter GoToDefinitionElseDeclaration<CR>
map <leader>d	:YcmCompleter GetDoc<CR>

" YouCompleteMe with virtualenv support
py << EOF
import os
import sys
if 'VIRTUAL_ENV' in os.environ:
  project_base_dir = os.environ['VIRTUAL_ENV']
  activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
  execfile(activate_this, dict(__file__=activate_this))
EOF


" ================================================================================ 
" Syntastic
" ================================================================================ 
" Plugin 'scrooloose/syntastic'

" Because Syntastic has annoying messages
" let g:syntastic_quiet_messages = { 'regex': 'F841\|F405\|F401\|F403\|E711\|E712\|E731' }


" ================================================================================ 
" vim-flake8
" ================================================================================ 
Plugin 'nvie/vim-flake8'


" ================================================================================ 
" vim-pydocstring
" ================================================================================ 
Plugin 'heavenshell/vim-pydocstring'

map <leader>c	:Pydocstring<CR>
let g:pydocstring_enable_mapping = 0


" ================================================================================ 
" ale
" ================================================================================ 
Plugin 'w0rp/ale' " syntax checker
let g:ale_enabled = 1
" let g:ale_echo_msg_error_str = 'E'
" let g:ale_echo_msg_warning_str = 'W'
" let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
let g:ale_fixers = ['remove_trailing_lines', 'trim_whitespace', 'autopep8', 'isort']
let g:ale_linters = {
\   'python': ['flake8'],
\}
let g:ale_python_flake8_options = '-m flake8'
let g:ale_python_flake8_use_global = 1
let g:ale_lint_delay = 200
let g:ale_lint_on_enter = 1
let g:ale_lint_on_save = 1
let g:ale_fix_on_save = 1
let g:ale_python_flake8_executable = 'python2'  " python3
let g:pymode_options_max_line_length=80
let b:ale_warn_about_trailing_whitespace = 0
" let g:pymode_lint_cwindow = 1
" let g:pymode_lint_on_fly = 1
" autocmd FileType python set colorcolumn=80  " move the vertical red line over to 120 characters

"highlight ExtraWhitespace ctermbg=red guibg=red
""highlight ExtraWhitespace ctermbg=darkgreen guibg=lightgreen
"match ExtraWhitespace /\s\+$/
"autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
"autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
"autocmd InsertLeave * match ExtraWhitespace /\s\+$/
"autocmd BufWinLeave * call clearmatches()

" ================================================================================ 
" 
" ================================================================================ 
Plugin 'timothycrosley/isort' " sort python imports alphabetically and by group


" ================================================================================ 
" Nerd Tree -- Tree File Viewer
" ================================================================================ 
Plugin 'scrooloose/nerdtree'

" start nerdtree when vim opens (with or without a file)
autocmd VimEnter * NERDTree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" Ctrl+n toggles nerdtree
map <C-n> :NERDTreeToggle<CR>

" set the active window to 1, which will be the non-tree window
autocmd VimEnter * wincmd l

" close nerdtree if it is the only window open
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" filter out *.pyc files
let NERDTreeIgnore = ['\.pyc$']

" after a re-source, fix syntax matching issues (concealing brackets):
if exists('g:loaded_webdevicons')
    call webdevicons#refresh()
endif
" ================================================================================ 
" 
" ================================================================================ 
Plugin 'scrooloose/nerdcommenter'


" ================================================================================ 
" 
" ================================================================================ 
Plugin 'Vimjas/vim-python-pep8-indent'


" ================================================================================
"
" ================================================================================
Plugin 'vim-airline/vim-airline'



" ================================================================================
"
" ================================================================================
Plugin 'kien/ctrlp.vim' 


" ================================================================================
Plugin 'ryanoasis/nerd-fonts'  " special fonts for tree viewers etc


" ================================================================================ 
" 
" ================================================================================ 
Plugin 'ryanoasis/vim-devicons'  " icons for tree viewers
let g:airline_powerline_fonts=1

" must be set after nerdtree, vim-airline, ctrlp, powerline, denite, unit, lightline.vim,
" vim-startify, vimfiler, flagship
set encoding=utf8

" All of your Plugins must be added before the following line
call vundle#end()
filetype plugin indent on    " required
